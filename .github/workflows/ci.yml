name: CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - '**.rs'
      - 'Cargo.*'
      - 'src/**'
      - 'migrations/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'Dockerfile'
      - '.github/workflows/**'
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  IMAGE_NAME: gogarid/pitza-backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Установка Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Кэш cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Сборка проекта
        run: cargo build --all

      - name: Сохранение артефактов target
        uses: actions/upload-artifact@v3
        with:
          name: target-artifact
          path: target

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Установка Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Кэш cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Загрузка target
        uses: actions/download-artifact@v3
        with:
          name: target-artifact
          path: target

      - name: Проверка lint (clippy)
        run: cargo clippy -- -D warnings

  audit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Установка Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Кэш cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Загрузка target
        uses: actions/download-artifact@v3
        with:
          name: target-artifact
          path: target

      - name: Аудит зависимостей
        run: cargo audit || true

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pitza_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Установка Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Кэш cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Загрузка target
        uses: actions/download-artifact@v3
        with:
          name: target-artifact
          path: target

      - name: Кэш diesel_cli
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/diesel
          key: ${{ runner.os }}-diesel-cli

      - name: Установка diesel_cli
        run: cargo install diesel_cli --no-default-features --features postgres || true

      - name: Применение миграций
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost/pitza_test
        run: diesel migration run

      - name: Тестирование
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost/pitza_test
        run: cargo test --all

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Установка Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Кэш cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Установка tarpaulin и запуск покрытия
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: "--out Xml"
        continue-on-error: true

      - name: Загрузка отчета о покрытии в Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./tarpaulin-report.xml

  build_and_push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Логин в DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Сборка и публикация Docker-образа
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Деплой на сервер
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            docker pull $IMAGE_NAME:latest
            docker-compose -f /path/to/your/docker-compose.yml up -d --remove-orphans
