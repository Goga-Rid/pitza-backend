name: CI/CD Backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/pitza_test

jobs:
  setup:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pitza_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Установка Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Установка зависимостей
        run: cargo fetch

      - name: Установка diesel_cli
        run: cargo install diesel_cli --no-default-features --features postgres

      - name: Ожидание запуска Postgres
        run: until pg_isready -h localhost -U postgres; do sleep 2; done

      - name: Применение миграций к тестовой базе
        run: diesel migration run --database-url=$TEST_DATABASE_URL

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Проверка кода (clippy)
        run: cargo clippy -- -D warnings

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Ожидание PostgreSQL
        run: until pg_isready -h localhost -U postgres; do sleep 2; done

      - name: Повторное применение миграций (на всякий случай)
        run: diesel migration run --database-url=$TEST_DATABASE_URL

      - name: Запуск тестов
        run: cargo test --all

      - name: Установка cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Генерация покрытия
        run: cargo tarpaulin --out Xml

      - name: Загрузка отчёта покрытия
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: tarpaulin-report.xml

  audit:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Security audit
        run: |
          cargo install cargo-audit
          cargo audit > audit-report.txt

      - name: Загрузка отчёта аудита
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: audit-report.txt

  build:
    runs-on: ubuntu-latest
    needs: [lint, audit, test]
    steps:
      - uses: actions/checkout@v3
      - name: Сборка проекта
        run: cargo build --release

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Логин в DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Сборка и публикация Docker-образа
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pitza-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Деплой на сервер через SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/pitza-backend:latest
            docker rm -f pitza-backend || true
            docker run -d --name pitza-backend -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/pitza-backend:latest
